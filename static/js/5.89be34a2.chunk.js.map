{"version":3,"sources":["cmps/elements/Button.js","cmps/settings/SettingsColors.js","pages/Settings.js"],"names":["Button","type","style","isBoolean","text","toggleText","textCondition","onClick","textIn","className","SettingsColors","useState","forceUpdate","ColorControl","colorVar","PRIMARY_COLOR","SECONDARY_COLOR","SettingsService","updateColorsLocalStorage","resetColorsLocalStorage","Settings"],"mappings":"oHAAA,oBAgBeA,IAdf,YAEc,IAAD,IAFKC,YAEL,MAFY,SAEZ,EAFsBC,EAEtB,EAFsBA,MAEtB,IAF6BC,iBAE7B,aADXC,YACW,MADJ,IACI,MADCC,kBACD,MADc,IACd,MADmBC,qBACnB,SAAXC,EAAW,EAAXA,QAEMC,EAASL,EAAYC,EAAOE,EAAgBF,EAAOC,EACzD,OACE,4BAAQI,UAAS,wBAAmBR,GAAQC,MAAOA,EACjDK,QAASA,GACRJ,GAAa,0BAAMM,UAAS,uBAAkBH,EAAgB,KAAO,SACtE,8BAAOE,M,qGCmBEE,MAvBf,WAA2B,IAAD,EAEAC,qBAAfC,EAFe,oBAMxB,OACE,yBAAKH,UAAU,mBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,SAAd,iBACA,kBAACI,EAAA,EAAD,CAAcC,SAAUC,MACxB,wBAAIN,UAAU,SAAd,mBACA,kBAACI,EAAA,EAAD,CAAcC,SAAUE,OAG1B,yBAAKP,UAAU,eACb,kBAACT,EAAA,EAAD,CAAQI,KAAK,OAAOG,QAbP,kBAAMU,IAAgBC,8BAcnC,kBAAClB,EAAA,EAAD,CAAQI,KAAK,QAAQG,QAbP,kBAAMU,IAAgBE,2BAA6BP,EAAY,UCUtEQ,UAff,WAME,OACE,yBAAKX,UAAU,YACb,yBAAKA,UAAU,4BACb,kBAAC,EAAD","file":"static/js/5.89be34a2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Button({ type = 'normal', style, isBoolean = false,\r\n  text = '1', toggleText = '2', textCondition = true,\r\n  onClick }) {\r\n\r\n  const textIn = isBoolean ? text : textCondition ? text : toggleText;\r\n  return (\r\n    <button className={`custom-buttom ${type}`} style={style}\r\n      onClick={onClick}>\r\n      {isBoolean && <span className={`toggle-light ${textCondition ? 'on' : 'off'}`}></span>}\r\n      <span>{textIn}</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState } from 'react';\r\nimport SettingsService from '../../services/SettingsService';\r\n\r\nimport { PRIMARY_COLOR, SECONDARY_COLOR } from '../../constants/CssVariable';\r\nimport ColorControl from '../helpers/ColorControl';\r\nimport Button from '../elements/Button';\r\n\r\nfunction SettingsColors() {\r\n\r\n  const [, forceUpdate] = useState();\r\n  const saveColors = () => SettingsService.updateColorsLocalStorage();\r\n  const resetColors = () => SettingsService.resetColorsLocalStorage() || forceUpdate({});\r\n\r\n  return (\r\n    <div className=\"settings-colors\">\r\n      <div className=\"colors-control\">\r\n        <h4 className=\"title\">Primary Color</h4>\r\n        <ColorControl colorVar={PRIMARY_COLOR} />\r\n        <h4 className=\"title\">Secondary Color</h4>\r\n        <ColorControl colorVar={SECONDARY_COLOR} />\r\n      </div>\r\n\r\n      <div className=\"colors-btns\">\r\n        <Button text='Save' onClick={saveColors} />\r\n        <Button text='Reset' onClick={resetColors} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingsColors;\r\n","import React from 'react';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import actions from '../store/actions';\r\n\r\nimport SettingsColors from '../cmps/settings/SettingsColors';\r\n\r\nfunction Settings() {\r\n\r\n  // const settingsStore = useSelector(state => state.settingsStore);\r\n  // const dispatch = useDispatch();\r\n  // const saveColors = () => dispatch(actions.updateColors());\r\n\r\n  return (\r\n    <div className=\"settings\">\r\n      <div className=\"visual-settings flex-col\">\r\n        <SettingsColors />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n"],"sourceRoot":""}